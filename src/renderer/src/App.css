/* Global styles for Eye Doro */
* {
  box-sizing: border-box;
}

body {
  margin: 0;
  padding: 0;
  font-family:
    -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  overflow: hidden;
}

#root {
  width: 100vw;
  height: 100vh;
}

/* Scrollbar styling */
::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: rgba(255, 255, 255, 0.1);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb {
  background: rgba(255, 255, 255, 0.3);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: rgba(255, 255, 255, 0.5);
}

/* Focus styles */
button:focus,
input:focus,
select:focus {
  outline: 2px solid #4caf50;
  outline-offset: 2px;
}

/* Animation utilities */
.fade-in {
  animation: fadeIn 0.3s ease-in-out;
}

.slide-up {
  animation: slideUp 0.4s ease-out;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slideUp {
  from {
    transform: translateY(20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

/* App.css */

/* Full screen container for various routes */
.fullscreen-container {
  width: 100vw;
  height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  background: transparent;
}

/* Transparent full screen for floating elements */
.transparent-fullscreen {
  width: 100vw;
  height: 100vh;
  background: transparent;
  pointer-events: none;
}

/* Common notification popup container */
.notification-popup-container {
  width: fit-content; /* Size to content instead of full viewport */
  height: fit-content; /* Size to content instead of full viewport */
  display: flex;
  align-items: center;
  justify-content: center;
  background: transparent;
  pointer-events: none; /* Make container non-interactive */
  margin: 0; /* Remove any default margins */
  padding: 0; /* Remove any default padding */
}

/* Ensure transparent background for notification popup window */
body:has(.notification-popup-container),
#root:has(.notification-popup-container) {
  background: transparent !important;
}

/* Alternative approach - direct class on body */
body.notification-popup-body {
  background: transparent !important;
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
  margin: 0 !important;
  padding: 0 !important;
}

#root.notification-popup-root {
  background: transparent !important;
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
  width: 100vw !important;
  height: 100vh !important;
}
